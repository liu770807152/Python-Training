# 定义函数
def yue(somebody):
    print("1. 拿出手机")
    print("2. 打开微信")
    print(f'3. 找一个你认为不错的对象: {somebody}')
    print("4. 出来约一下")

#=================================================================
# 调用函数
闺蜜一号 = 'Lucy'
闺蜜二号 = 'Jane'
yue(闺蜜一号)
print("这次很开心, 下次再来")
yue(闺蜜一号)
yue(闺蜜二号)

#=================================================================
#返回值
def func():
    print("哈哈哈")
    return "路人甲", "路人乙", "路人丙"

ret = func()
print('返回值是', ret)

#=================================================================
# 参数: 函数在执行的时候， 可以由外界给函数内部传递一些信息
def yue(tools, gender):  # 形参, 只是一个变量
    print("1. 打开手机")
    print(f"2. 打开{tools}")
    print(f"3. 找{gender}人")
    print("4. 约")

yue("陌陌", "男")  # 陌陌和男是实参

#=================================================================
# 形参: 在函数声明的位置编写的变量
# # 1. 位置参数, 按照从左到右的顺序编写变量
# # 2. 默认值参数, 在形参声明的时候, 直接给出一个默认值, 后续在访问到这个函数的时候. 该参数就可以不给出具体的数据, 直接使用默认值
# 必须匹配
def func(a, b, c):
    print(a, b, c)

func(11, 22, 33, 44)  # 实参的数量必须和形参一致

# 混合参数(位置参数+关键字参数+默认值参数), 注意顺序, 先位置参数, 后关键字参数
def func(a, b, c=0):
    print(a, b, c)

func(11, c="吼吼",  b="呵呵")

# 坑: 如果你的默认值参数是一个可变的数据类型, 会被共享 (以后再说)
def func(val, lst=[]):
    lst.append(val)
    print(lst)

func(10086)  # [10086]
func(10010)  # [10086, 10010]  两次访问使用的是同一个列表
func(777888, [])  # [777888]